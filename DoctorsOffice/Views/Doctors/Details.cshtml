@{
  Layout = "_Layout";
}

@using DoctorsOffice.Models
@model DoctorsOffice.Models.Doctor

<h2>Doctor Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>  

@if(@Model.JoinEntities.Count == 0)
{
  <p>This doctor does not have any patients yet!</p>
}
else
{
  <h4>This doctor has the following patients:</h4>
  <ul>
    @foreach(DoctorPatient join in Model.JoinEntities)
    {
      <li>Patient: @join.Patient.Name</li>
      @using (Html.BeginForm("DeleteJoin", "Doctors"))
      {
        @Html.Hidden("joinId", @join.DoctorPatientId)
        <input type="submit" value="Delete"/>
      }
    }
  </ul>
}
@if(@Model.JoinEntities2.Count == 0)
{
  <p>This doctor has no specialties yet.</p>
}
else
{
<h4>This doctor has the following specialties:</h4>
  <ul>
    @foreach(DoctorSpecialty join in Model.JoinEntities2)
    {
      <li>Specialty: @join.Specialty.Name</li>
      @using (Html.BeginForm("DeleteJoin", "Doctors"))
      {
        @Html.Hidden("joinId", @join.DoctorSpecialtyId)
        <input type="submit" value="Delete"/>
      }
    }
  </ul>
}

<br>
<div id="nav-links">
  <p>@Html.ActionLink("Edit Doctor or Specialty", "Edit", new { id = Model.DoctorId }) | @Html.ActionLink("Add a Patient", "AddPatient", new { id = Model.DoctorId }) | @Html.ActionLink("Delete Doctor", "Delete", new { id = Model.DoctorId })</p>
  <p>@Html.ActionLink("Back to List of Doctors", "Index")</p>
  <!-- <p>@Html.ActionLink("Home", "Index", "Home")</p> -->
</div>